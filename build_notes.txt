--------------------------------------------------------------------------------
Revised to 2023-07-28

"make" should work with the Intel C compiler (icc).

The Intel compiler shouild not be required, but it is convenient for the moment.

--------------------------------------------------------------------------------
Earlier (archaeological) notes

Original build instructions as captured by the icc "-sox" flag:
staff.frontera:~/Frontera/Util/ICX_mapper:2023-07-12T18:30:58 $ strings SnoopFilterMapper.exe | grep sox
-?comment:Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.1.1.217 Build 20200306  : SnoopFilterMapper.c : -sox -g -O0 -DMAP_L3 -DMYHUGEPAGE_THP -DCHA_COUNTS -o SnoopFilterMapper.exe 
-?comment:Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.1.1.217 Build 20200306  : va2pa_lib.c : -sox -g -O0 -DMAP_L3 -DMYHUGEPAGE_THP -DCHA_COUNTS -o SnoopFilterMapper.exe 
-?comment:Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.1.1.217 Build 20200306  : ssum.c : -sox -g -O0 -DMAP_L3 -DMYHUGEPAGE_THP -DCHA_COUNTS -o SnoopFilterMapper.exe 
-sox -g -O0 -DMAP_L3 -DMYHUGEPAGE_THP -DCHA_COUNTS -o SnoopFilterMapper.exe
--------------------------------------------------------------------------------
The current development version ("Map_Addresses_to_L3_Slices_ICX.c") can be built in a single step, but now has its "helper"
functions in separate source code files that are pulled into the main source with "#include" statements.

With the Intel icc compiler, I ran
	icc -sox -g -O0 -DMAP_L3 -DMYHUGEPAGE_THP -DCHA_COUNTS  Map_Addresses_to_L3_Slices_ICX.c va2pa_lib.c -o Map_Addresses_to_L3_Slices_ICX.exe

The resulting code ran correctly on a 40-core ICX (Xeon Platinum 8380).
--------------------------------------------------------------------------------
